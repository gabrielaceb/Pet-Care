@page "/AdminPage"



@using MudBlazor
@using PetCare.Admin.Componets
@using PetCare.Aplication.UseCases
@using PetCare.Domain.Models.StadnartValues

@inject StVaccineUseCase StvaccineUseCase
@inject IDialogService DialogService

@rendermode InteractiveServer
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudContainer>
    <MudPaper>
        <MudText Typo="Typo.h6">Admin Page</MudText>
        <MudText Typo="Typo.body1">This is the admin page</MudText>
    </MudPaper>
</MudContainer>

<MudContainer>
<MudPaper>
    <MudText Typo="Typo.h6">Vaccines</MudText>
    <MudDivider />
    <MudTable Items="@_vaccines" TItem="StVaccines">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Age</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Id</MudTd>
            <MudTd>@context.Name</MudTd>
            <MudTd>@context.Description</MudTd>
            <MudTd>@context.Age</MudTd>
        </RowTemplate>
    </MudTable>
    <MudButton OnClick="AddVaccine" Color="Color.Primary" Variant="Variant.Filled">Add</MudButton>
</MudPaper>

</MudContainer>



@code {
    
    private StVaccines _newVaccine = new();
    private List<StVaccines> _vaccines = new List<StVaccines>();

    protected override async Task OnInitializedAsync()
    {
        _vaccines = (List<StVaccines>)await StvaccineUseCase.FindAll();
        
    }

    private async Task AddVaccine()
    {
        DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = false ,CloseOnEscapeKey = true };
        var parameters = new DialogParameters<AddVaccineModal>();
        var dialog = DialogService.Show<AddVaccineModal>("Add Vaccine" ,options);
       
        StateHasChanged();
        
        
        
    }
    
}